{"version":3,"sources":["webpack:///../../../src/components/VIcon/VIcon.ts","webpack:///./src/mixin/DeleteMixin.js","webpack:///./src/mixin/PostMixin.js","webpack:///./src/mixin/RefreshMeMixin.js","webpack:///./src/mixin/CommunityActions.js","webpack:///../../../src/components/VAvatar/VAvatar.ts","webpack:///../../../src/components/VList/VList.ts","webpack:///./src/mixin/ConfirmDialog.js","webpack:///./src/mixin/Snack.js","webpack:///./node_modules/core-js/modules/es.array.find-index.js","webpack:///../../../src/components/VList/VListItem.ts"],"names":["isFontAwesome5","some","val","iconType","isSvgPath","test","icon","SIZE_MAP","VIcon","name","props","dense","disabled","left","right","size","Number","tag","type","required","default","computed","medium","hasClickListener","Boolean","this","listeners$","click","methods","getIcon","iconName","$slots","text","getSize","sizes","xSmall","small","large","xLarge","explicitSize","key","getDefaultData","staticClass","class","attrs","attrs$","on","getSvgWrapperData","fontSize","wrapperData","style","height","width","undefined","applyColors","data","themeClasses","renderFontIcon","newChildren","delimiterIndex","isMaterialIcon","h","renderSvgIcon","svgData","xmlns","viewBox","role","d","renderSvgIconComponent","component","render","$_wrapperFor","functional","children","DeleteMixin","deleteErrors","deleted","deleting","deleteResponse","delete","url","$axios","then","res","catch","err","response","finally","PostMixin","posting","postInstance","formErrors","statusCode","success","post","payload","status","RefreshMeMixin","refreshing","refreshMe","get","$urls","user","me","$helper","setCurrentUser","$store","dispatch","CommunityActions","mixins","Snack","FetchMixin","ConfirmDialog","mapMutations","unSubscribe","item","openConfirmDialog","$util","format","community","unsubscribe","id","subscribe","disableNotification","disableNotificationFor","enableNotification","subscription","reportCommunity","classes","roundedClasses","styles","minWidth","measurableStyles","$listeners","setBackgroundColor","provide","isInList","list","inject","isInMenu","isInNav","expand","flat","nav","rounded","subheader","threeLine","twoLine","groups","register","unregister","index","findIndex","g","content","splice","listClick","group","dialogMsg","method","events","successMessage","failMessage","openSnack","color","timeout","multiline","SET_SNACK","SET_TIMEOUT","SET_LINE","SET_TEXT","SET_COLOR","openSuccessSnack","$","$findIndex","addToUnscopables","FIND_INDEX","SKIPS_HOLES","Array","target","proto","forced","callbackfn","arguments","length","baseMixins","directives","Ripple","isInGroup","inheritAttrs","activeClass","listItemGroup","inactive","link","selectable","value","proxyClass","isClickable","created","$attrs","hasOwnProperty","e","$el","blur","genAttrs","tabindex","String","toggle","to","inputValue","keydown","$scopedSlots","active","isActive","setTextColor"],"mappings":"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","file":"js/chunk-ba2b0a8a.746c9ebb.js","sourcesContent":["import './VIcon.sass'\n\n// Mixins\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport Colorable from '../../mixins/colorable'\nimport Sizeable from '../../mixins/sizeable'\nimport Themeable from '../../mixins/themeable'\n\n// Util\nimport { convertToUnit, keys, remapInternalIcon } from '../../util/helpers'\n\n// Types\nimport Vue, { CreateElement, VNode, VNodeChildren, VNodeData } from 'vue'\nimport mixins from '../../util/mixins'\nimport { VuetifyIcon, VuetifyIconComponent } from 'vuetify/types/services/icons'\n\nenum SIZE_MAP {\n  xSmall = '12px',\n  small = '16px',\n  default = '24px',\n  medium = '28px',\n  large = '36px',\n  xLarge = '40px'\n}\n\nfunction isFontAwesome5 (iconType: string): boolean {\n  return ['fas', 'far', 'fal', 'fab', 'fad', 'fak'].some(val => iconType.includes(val))\n}\n\nfunction isSvgPath (icon: string): boolean {\n  return (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(icon) && /[\\dz]$/i.test(icon) && icon.length > 4)\n}\n\nconst VIcon = mixins(\n  BindsAttrs,\n  Colorable,\n  Sizeable,\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-icon',\n\n  props: {\n    dense: Boolean,\n    disabled: Boolean,\n    left: Boolean,\n    right: Boolean,\n    size: [Number, String],\n    tag: {\n      type: String,\n      required: false,\n      default: 'i',\n    },\n  },\n\n  computed: {\n    medium () {\n      return false\n    },\n    hasClickListener (): boolean {\n      return Boolean(\n        this.listeners$.click || this.listeners$['!click']\n      )\n    },\n  },\n\n  methods: {\n    getIcon (): VuetifyIcon {\n      let iconName = ''\n      if (this.$slots.default) iconName = this.$slots.default[0].text!.trim()\n\n      return remapInternalIcon(this, iconName)\n    },\n    getSize (): string | undefined {\n      const sizes = {\n        xSmall: this.xSmall,\n        small: this.small,\n        medium: this.medium,\n        large: this.large,\n        xLarge: this.xLarge,\n      }\n\n      const explicitSize = keys(sizes).find(key => sizes[key])\n\n      return (\n        (explicitSize && SIZE_MAP[explicitSize]) || convertToUnit(this.size)\n      )\n    },\n    // Component data for both font icon and SVG wrapper span\n    getDefaultData (): VNodeData {\n      return {\n        staticClass: 'v-icon notranslate',\n        class: {\n          'v-icon--disabled': this.disabled,\n          'v-icon--left': this.left,\n          'v-icon--link': this.hasClickListener,\n          'v-icon--right': this.right,\n          'v-icon--dense': this.dense,\n        },\n        attrs: {\n          'aria-hidden': !this.hasClickListener,\n          disabled: this.hasClickListener && this.disabled,\n          type: this.hasClickListener ? 'button' : undefined,\n          ...this.attrs$,\n        },\n        on: this.listeners$,\n      }\n    },\n    getSvgWrapperData () {\n      const fontSize = this.getSize()\n      const wrapperData = {\n        ...this.getDefaultData(),\n        style: fontSize ? {\n          fontSize,\n          height: fontSize,\n          width: fontSize,\n        } : undefined,\n      }\n      this.applyColors(wrapperData)\n\n      return wrapperData\n    },\n    applyColors (data: VNodeData): void {\n      data.class = { ...data.class, ...this.themeClasses }\n      this.setTextColor(this.color, data)\n    },\n    renderFontIcon (icon: string, h: CreateElement): VNode {\n      const newChildren: VNodeChildren = []\n      const data = this.getDefaultData()\n\n      let iconType = 'material-icons'\n      // Material Icon delimiter is _\n      // https://material.io/icons/\n      const delimiterIndex = icon.indexOf('-')\n      const isMaterialIcon = delimiterIndex <= -1\n\n      if (isMaterialIcon) {\n        // Material icon uses ligatures.\n        newChildren.push(icon)\n      } else {\n        iconType = icon.slice(0, delimiterIndex)\n        if (isFontAwesome5(iconType)) iconType = ''\n      }\n\n      data.class[iconType] = true\n      data.class[icon] = !isMaterialIcon\n\n      const fontSize = this.getSize()\n      if (fontSize) data.style = { fontSize }\n\n      this.applyColors(data)\n\n      return h(this.hasClickListener ? 'button' : this.tag, data, newChildren)\n    },\n    renderSvgIcon (icon: string, h: CreateElement): VNode {\n      const svgData: VNodeData = {\n        class: 'v-icon__svg',\n        attrs: {\n          xmlns: 'http://www.w3.org/2000/svg',\n          viewBox: '0 0 24 24',\n          role: 'img',\n          'aria-hidden': true,\n        },\n      }\n\n      const size = this.getSize()\n      if (size) {\n        svgData.style = {\n          fontSize: size,\n          height: size,\n          width: size,\n        }\n      }\n\n      return h(this.hasClickListener ? 'button' : 'span', this.getSvgWrapperData(), [\n        h('svg', svgData, [\n          h('path', {\n            attrs: {\n              d: icon,\n            },\n          }),\n        ]),\n      ])\n    },\n    renderSvgIconComponent (\n      icon: VuetifyIconComponent,\n      h: CreateElement\n    ): VNode {\n      const data: VNodeData = {\n        class: {\n          'v-icon__component': true,\n        },\n      }\n\n      const size = this.getSize()\n      if (size) {\n        data.style = {\n          fontSize: size,\n          height: size,\n          width: size,\n        }\n      }\n\n      this.applyColors(data)\n\n      const component = icon.component\n      data.props = icon.props\n      data.nativeOn = data.on\n\n      return h(this.hasClickListener ? 'button' : 'span', this.getSvgWrapperData(), [\n        h(component, data),\n      ])\n    },\n  },\n\n  render (h: CreateElement): VNode {\n    const icon = this.getIcon()\n\n    if (typeof icon === 'string') {\n      if (isSvgPath(icon)) {\n        return this.renderSvgIcon(icon, h)\n      }\n      return this.renderFontIcon(icon, h)\n    }\n\n    return this.renderSvgIconComponent(icon, h)\n  },\n})\n\nexport default Vue.extend({\n  name: 'v-icon',\n\n  $_wrapperFor: VIcon,\n\n  functional: true,\n\n  render (h, { data, children }): VNode {\n    let iconName = ''\n\n    // Support usage of v-text and v-html\n    if (data.domProps) {\n      iconName = data.domProps.textContent ||\n        data.domProps.innerHTML ||\n        iconName\n\n      // Remove nodes so it doesn't\n      // overwrite our changes\n      delete data.domProps.textContent\n      delete data.domProps.innerHTML\n    }\n\n    return h(VIcon, data, iconName ? [iconName] : children)\n  },\n})\n","const DeleteMixin = {\n\tdata: () => ({\n\t\tdeleteErrors: {},\n\t\tdeleted: false,\n\t\tdeleting: false,\n\t\tdeleteResponse: null\n\t}),\n\tmethods: {\n\t\tdelete(url) {\n\t\t\tthis.deleting = true\n\t\t\treturn this\n\t\t\t\t.$axios.delete(url)\n\t\t\t\t.then(res => {\n\t\t\t\t\tthis.deleted = true\n\t\t\t\t\tthis.deleteResponse = res\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tthis.deleteErrors = err.response.data\n\t\t\t\t})\n\t\t\t\t.finally(() => {\n\t\t\t\t\tthis.deleting = false\n\t\t\t\t})\n\t\t}\n\t}\n}\n\nexport default DeleteMixin\n","const PostMixin = {\n\tdata: () => ({\n\t\tposting: false,\n\t\tpostInstance: null,\n\t\tformErrors: {},\n\t\tstatusCode: null,\n\t\tsuccess: false,\n\t}),\n\tmethods: {\n\t\tpost(url, payload = null) {\n\t\t\tthis.posting = true\n\t\t\treturn this\n\t\t\t\t.$axios.post(url, payload)\n\t\t\t\t.then(res => {\n\t\t\t\t\tthis.success = true\n\t\t\t\t\tthis.postInstance = res\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tthis.statusCode = err.response.status\n\t\t\t\t\tthis.formErrors = err.response.data\n\t\t\t\t})\n\t\t\t\t.finally(() => {\n\t\t\t\t\tthis.posting = false\n\t\t\t\t})\n\t\t}\n\t}\n}\n\nexport default PostMixin\n","const RefreshMeMixin = {\n\tdata: () => ({\n\t\trefreshing: false\n\t}),\n\tmethods: {\n\t\tasync refreshMe() {\n\t\t\tthis.refreshing = true\n\t\t\ttry {\n\t\t\t\tconst res = await this.$axios.get(this.$urls.user.me)\n\t\t\t\tthis.$helper.setCurrentUser(res)\n\t\t\t\tawait this.$store.dispatch(\"user/setCurrentUser\", res)\n\t\t\t\tawait this.$store.dispatch(\"user/setInView\", res)\n\t\t\t} finally {\n\t\t\t\tthis.refreshing = false\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default RefreshMeMixin\n","import PostMixin from \"@/mixin/PostMixin.js\";\nimport Snack from \"@/mixin/Snack.js\";\nimport RefreshMeMixin from \"@/mixin/RefreshMeMixin.js\";\nimport FetchMixin from \"@/mixin/FetchMixin.js\";\nimport {mapMutations} from \"vuex\";\nimport DeleteMixin from \"@/mixin/DeleteMixin.js\";\nimport ConfirmDialog from \"@/mixin/ConfirmDialog.js\";\n\nconst CommunityActions = {\n\tmixins: [PostMixin, Snack, RefreshMeMixin, FetchMixin, DeleteMixin, ConfirmDialog],\n\tmethods: {\n\t\t...mapMutations(\"community\", [\"SET_TO_VIEW\"]),\n\t\tasync unSubscribe(item) {\n\t\t\tawait this.openConfirmDialog(\n\t\t\t\t\"Are you sure you want to revoke your subscription?\",\n\t\t\t\t\"DELETE\",\n\t\t\t\tthis.$util.format(this.$urls.community.unsubscribe, item.id),\n\t\t\t\t[\"refreshMe\", \"refreshCommunity\"],\n\t\t\t\t\"Cheers! Subscription revoked successfully!\",\n\t\t\t\t\"Sorry! Subscription couldn't be revoked!\"\n\t\t\t)\n\t\t},\n\t\tasync subscribe(item) {\n\t\t\tawait this.openConfirmDialog(\n\t\t\t\t\"Are you sure you want to subscribe this community?\",\n\t\t\t\t\"POST\",\n\t\t\t\tthis.$util.format(this.$urls.community.subscribe, item.id),\n\t\t\t\t[\"refreshMe\", \"refreshCommunity\"],\n\t\t\t\t\"Cheers! Subscription added successfully!\",\n\t\t\t\t\"Sorry! Subscription couldn't be added!\"\n\t\t\t)\n\t\t},\n\t\tasync disableNotification(item) {\n\t\t\tawait this.openConfirmDialog(\n\t\t\t\t`Are you sure you want to disable notifications for the community <code>${item.name}</code>?`,\n\t\t\t\t\"POST\",\n\t\t\t\tthis.$util.format(this.$urls.community.disableNotificationFor, item.id),\n\t\t\t\t[\"refreshMe\", \"refreshCommunity\"],\n\t\t\t\t`Cheers! Notifications for the community ${item.name} is disabled successfully!`,\n\t\t\t\t\"Sorry! Notifications couldn't be disabled!\"\n\t\t\t)\n\t\t},\n\t\tasync enableNotification(item) {\n\t\t\tawait this.openConfirmDialog(\n\t\t\t\t`Are you sure you want to enable notifications for the community <code>${item.name}</code>?`,\n\t\t\t\t\"DELETE\",\n\t\t\t\tthis.$util.format(this.$urls.community.disableNotificationFor, item.subscription.id),\n\t\t\t\t[\"refreshMe\", \"refreshCommunity\"],\n\t\t\t\t`Cheers! Notifications for the community ${item.name} is enabled successfully!`,\n\t\t\t\t\"Sorry! Notifications couldn't be enabled!\"\n\t\t\t)\n\t\t},\n\t\treportCommunity() {\n\t\t\t// TODO: open report dialog\n\t\t\t// TODO: implement report dialog\n\t\t}\n\t}\n}\n\nexport default CommunityActions\n","import './VAvatar.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Measurable from '../../mixins/measurable'\nimport Roundable from '../../mixins/roundable'\n\n// Utilities\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\nexport default mixins(\n  Colorable,\n  Measurable,\n  Roundable,\n  /* @vue/component */\n).extend({\n  name: 'v-avatar',\n\n  props: {\n    left: Boolean,\n    right: Boolean,\n    size: {\n      type: [Number, String],\n      default: 48,\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-avatar--left': this.left,\n        'v-avatar--right': this.right,\n        ...this.roundedClasses,\n      }\n    },\n    styles (): object {\n      return {\n        height: convertToUnit(this.size),\n        minWidth: convertToUnit(this.size),\n        width: convertToUnit(this.size),\n        ...this.measurableStyles,\n      }\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-avatar',\n      class: this.classes,\n      style: this.styles,\n      on: this.$listeners,\n    }\n\n    return h('div', this.setBackgroundColor(this.color, data), this.$slots.default)\n  },\n})\n","// Styles\nimport './VList.sass'\nimport VListGroup from './VListGroup'\n\n// Components\nimport VSheet from '../VSheet/VSheet'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VListGroupInstance = InstanceType<typeof VListGroup>\n\ninterface options extends InstanceType<typeof VSheet> {\n  isInMenu: boolean\n  isInNav: boolean\n}\n\n/* @vue/component */\nexport default VSheet.extend<options>().extend({\n  name: 'v-list',\n\n  provide (): object {\n    return {\n      isInList: true,\n      list: this,\n    }\n  },\n\n  inject: {\n    isInMenu: {\n      default: false,\n    },\n    isInNav: {\n      default: false,\n    },\n  },\n\n  props: {\n    dense: Boolean,\n    disabled: Boolean,\n    expand: Boolean,\n    flat: Boolean,\n    nav: Boolean,\n    rounded: Boolean,\n    subheader: Boolean,\n    threeLine: Boolean,\n    twoLine: Boolean,\n  },\n\n  data: () => ({\n    groups: [] as VListGroupInstance[],\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSheet.options.computed.classes.call(this),\n        'v-list--dense': this.dense,\n        'v-list--disabled': this.disabled,\n        'v-list--flat': this.flat,\n        'v-list--nav': this.nav,\n        'v-list--rounded': this.rounded,\n        'v-list--subheader': this.subheader,\n        'v-list--two-line': this.twoLine,\n        'v-list--three-line': this.threeLine,\n      }\n    },\n  },\n\n  methods: {\n    register (content: VListGroupInstance) {\n      this.groups.push(content)\n    },\n    unregister (content: VListGroupInstance) {\n      const index = this.groups.findIndex(g => g._uid === content._uid)\n\n      if (index > -1) this.groups.splice(index, 1)\n    },\n    listClick (uid: number) {\n      if (this.expand) return\n\n      for (const group of this.groups) {\n        group.toggle(uid)\n      }\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-list',\n      class: this.classes,\n      style: this.styles,\n      attrs: {\n        role: this.isInNav || this.isInMenu ? undefined : 'list',\n        ...this.attrs$,\n      },\n    }\n\n    return h(this.tag, this.setBackgroundColor(this.color, data), [this.$slots.default])\n  },\n})\n","const ConfirmDialog = {\n\tmethods: {\n\t\tasync openConfirmDialog(dialogMsg, method, url, events, successMessage, failMessage) {\n\t\t\tawait this.$store.dispatch(\"confirmDialog/setDialogMessage\", dialogMsg)\n\t\t\tawait this.$store.dispatch(\"confirmDialog/setMethod\", method)\n\t\t\tawait this.$store.dispatch(\"confirmDialog/setUrl\", url)\n\t\t\tawait this.$store.dispatch(\"confirmDialog/setSuccessEvents\", events)\n\t\t\tawait this.$store.dispatch(\"confirmDialog/setSuccessMessage\", successMessage)\n\t\t\tawait this.$store.dispatch(\"confirmDialog/setFailureMessage\", failMessage)\n\t\t\tawait this.$store.dispatch(\"confirmDialog/setDialog\", true)\n\t\t},\n\t}\n}\n\nexport default ConfirmDialog\n","import {mapMutations} from \"vuex\";\n\nconst Snack = {\n\tmethods: {\n\t\t...mapMutations(\"snack\", [\"SET_SNACK\", \"SET_COLOR\", \"SET_TEXT\", \"SET_LINE\", \"SET_TIMEOUT\"]),\n\t\topenSnack(text, {color = \"error\", timeout = 3000, multiline = false} = {}) {\n\t\t\tthis.SET_SNACK(true)\n\t\t\tthis.SET_TIMEOUT(timeout)\n\t\t\tthis.SET_LINE(multiline)\n\t\t\tthis.SET_TEXT(text)\n\t\t\tthis.SET_COLOR(color)\n\t\t},\n\t\topenSuccessSnack(text, {color = \"success\", timeout = 3000, multiline = false} = {}) {\n\t\t\tthis.SET_SNACK(true)\n\t\t\tthis.SET_TIMEOUT(timeout)\n\t\t\tthis.SET_LINE(multiline)\n\t\t\tthis.SET_TEXT(text)\n\t\t\tthis.SET_COLOR(color)\n\t\t}\n\t}\n}\n\nexport default Snack\n","'use strict';\nvar $ = require('../internals/export');\nvar $findIndex = require('../internals/array-iteration').findIndex;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\nvar FIND_INDEX = 'findIndex';\nvar SKIPS_HOLES = true;\n\n// Shouldn't skip holes\nif (FIND_INDEX in []) Array(1)[FIND_INDEX](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.findIndex` method\n// https://tc39.es/ecma262/#sec-array.prototype.findindex\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND_INDEX);\n","// Styles\nimport './VListItem.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Routable from '../../mixins/routable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\n\n// Directives\nimport Ripple from '../../directives/ripple'\n\n// Utilities\nimport { keyCodes } from './../../util/helpers'\nimport { ExtractVue } from './../../util/mixins'\nimport { removed } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode } from 'vue'\nimport { PropType, PropValidator } from 'vue/types/options'\n\nconst baseMixins = mixins(\n  Colorable,\n  Routable,\n  Themeable,\n  GroupableFactory('listItemGroup'),\n  ToggleableFactory('inputValue')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  isInGroup: boolean\n  isInList: boolean\n  isInMenu: boolean\n  isInNav: boolean\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-list-item',\n\n  directives: {\n    Ripple,\n  },\n\n  inject: {\n    isInGroup: {\n      default: false,\n    },\n    isInList: {\n      default: false,\n    },\n    isInMenu: {\n      default: false,\n    },\n    isInNav: {\n      default: false,\n    },\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.listItemGroup) return ''\n\n        return this.listItemGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    dense: Boolean,\n    inactive: Boolean,\n    link: Boolean,\n    selectable: {\n      type: Boolean,\n    },\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    threeLine: Boolean,\n    twoLine: Boolean,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-list-item--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-list-item': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-list-item--dense': this.dense,\n        'v-list-item--disabled': this.disabled,\n        'v-list-item--link': this.isClickable && !this.inactive,\n        'v-list-item--selectable': this.selectable,\n        'v-list-item--three-line': this.threeLine,\n        'v-list-item--two-line': this.twoLine,\n        ...this.themeClasses,\n      }\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.listItemGroup\n      )\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('avatar')) {\n      removed('avatar', this)\n    }\n  },\n\n  methods: {\n    click (e: MouseEvent | KeyboardEvent) {\n      if (e.detail) this.$el.blur()\n\n      this.$emit('click', e)\n\n      this.to || this.toggle()\n    },\n    genAttrs () {\n      const attrs: Record<string, any> = {\n        'aria-disabled': this.disabled ? true : undefined,\n        tabindex: this.isClickable && !this.disabled ? 0 : -1,\n        ...this.$attrs,\n      }\n\n      if (this.$attrs.hasOwnProperty('role')) {\n        // do nothing, role already provided\n      } else if (this.isInNav) {\n        // do nothing, role is inherit\n      } else if (this.isInGroup) {\n        attrs.role = 'option'\n        attrs['aria-selected'] = String(this.isActive)\n      } else if (this.isInMenu) {\n        attrs.role = this.isClickable ? 'menuitem' : undefined\n        attrs.id = attrs.id || `list-item-${this._uid}`\n      } else if (this.isInList) {\n        attrs.role = 'listitem'\n      }\n\n      return attrs\n    },\n    toggle () {\n      if (this.to && this.inputValue === undefined) {\n        this.isActive = !this.isActive\n      }\n      this.$emit('change')\n    },\n  },\n\n  render (h): VNode {\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      ...this.genAttrs(),\n    }\n    data[this.to ? 'nativeOn' : 'on'] = {\n      ...data[this.to ? 'nativeOn' : 'on'],\n      keydown: (e: KeyboardEvent) => {\n        /* istanbul ignore else */\n        if (e.keyCode === keyCodes.enter) this.click(e)\n\n        this.$emit('keydown', e)\n      },\n    }\n\n    if (this.inactive) tag = 'div'\n    if (this.inactive && this.to) {\n      data.on = data.nativeOn\n      delete data.nativeOn\n    }\n\n    const children = this.$scopedSlots.default\n      ? this.$scopedSlots.default({\n        active: this.isActive,\n        toggle: this.toggle,\n      })\n      : this.$slots.default\n\n    return h(tag, this.isActive ? this.setTextColor(this.color, data) : data, children)\n  },\n})\n"],"sourceRoot":""}